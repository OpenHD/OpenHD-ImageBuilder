name: R2 tests

on:
  push:
    branches: [ "2.3-evo" ]
    paths:
      - 'last.release'

#  schedule:
#    - cron: '0 2 * * *' # run at 2 AM UTC

jobs:
  build:
    runs-on: ubuntu-22.04
    
    strategy:
      fail-fast: false # Don't fail all if any of the jobs is failing
      
    steps:
    - name: Setup env
      run: |
        echo "DT=$(date +'%Y-%m-%d_%H%M')" >> $GITHUB_ENV
        echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
        
    ### ONLY THIS RELEVANT FOR BUILDING ###
    
    # - name: Debug file
    #   run: |
    #     dd if=/dev/urandom of=random_data_filex86 bs=2M count=1
    #     dd if=/dev/urandom of=random_data_filepi-bullseye bs=2M count=1


    - name: R2 copy old files in oldrelease folder
      shell: bash
      env:
        aws_endpoint: "https://data.openhdfpv.org"
        aws_key_id: ${{ secrets.DATA_ACCESS }}
        aws_secret_access_key: ${{ secrets.DATA_KEY }}
        aws_s3_bucket: openhd-images
        AWS_EC2_METADATA_DISABLED: true
      run: |
        aws configure set aws_access_key_id $aws_key_id
        aws configure set aws_secret_access_key $aws_secret_access_key 
        aws s3 --endpoint-url $aws_endpoint rm --recursive s3://$aws_s3_bucket/Downloader/oldrelease
        aws s3 --endpoint-url $aws_endpoint sync s3://$aws_s3_bucket/Downloader/release s3://$aws_s3_bucket/Downloader/oldrelease
        aws s3 --endpoint-url $aws_endpoint rm --recursive s3://$aws_s3_bucket/Downloader/release
        aws s3 --endpoint-url $aws_endpoint cp s3://$aws_s3_bucket/Downloader/os_list_imagingutility_v3.json s3://$aws_s3_bucket/Downloader/oldrelease/

    # - name: R2 tests
    #   shell: bash
    #   env:
    #     aws_endpoint: "https://data.openhdfpv.org"
    #     aws_key_id: ${{ secrets.DATA_ACCESS }}
    #     aws_secret_access_key: ${{ secrets.DATA_KEY }}
    #     aws_s3_bucket: openhd-images
    #     AWS_EC2_METADATA_DISABLED: true
    #   run: |
    #     aws s3 --endpoint-url $aws_endpoint cp random_data_filex86 s3://$aws_s3_bucket/Downloader/release/
    #     aws s3 --endpoint-url $aws_endpoint cp random_data_filepi-bullseye s3://$aws_s3_bucket/Downloader/release/

    - name: Get all Values of the old images
      shell: bash
      env:
        aws_endpoint: "https://data.openhdfpv.org"
        aws_key_id: ${{ secrets.DATA_ACCESS }}
        aws_secret_access_key: ${{ secrets.DATA_KEY }}
        aws_s3_bucket: openhd-images
        AWS_EC2_METADATA_DISABLED: true
      run: |
        aws s3 --endpoint-url $aws_endpoint sync s3://$aws_s3_bucket/Downloader/oldrelease/ . --exclude "*" --include "*.txt"
        ls -a

    - name: Download Template for the ImageWriter
      shell: bash
      env:
        aws_endpoint: "https://data.openhdfpv.org"
        aws_key_id: ${{ secrets.DATA_ACCESS }}
        aws_secret_access_key: ${{ secrets.DATA_KEY }}
        aws_s3_bucket: openhd-images
        AWS_EC2_METADATA_DISABLED: true
      run: |
        curl https://data.openhdfpv.org/openhd-images/Downloader/os_list_imagingutility_v3_template.json -o os_list_imagingutility_v3_rpi.json -s
        ls -a
        echo "here is where to magic starts"
        echo "were downloading one image at a time and creating a new json"
        #to reduce download traffic I'll modify all Release yml's to also upload a textfile for each variable.
        export NAME=$(cat last.release)
        export FILESIZE=${{ env.SIZEFULL }}
        export FILENAME=${{ env.NAME }}
        export DOWNLOADSIZE=$(wc -c *.xz | cut -f 1 -d " ")
        export SUM=$(cat sha256)
        export RELEASEDATE=$(date +%Y-%m-%d)
        sed -i "s/RELEASENAMErpi/$NAME/ig" os_list_imagingutility_v3_rpi.json
        sed -i "s/FILENAMErpi/$FILENAME/ig" os_list_imagingutility_v3_rpi.json       
        sed -i "s/FILESIZErpi/$FILESIZE/ig" os_list_imagingutility_v3_rpi.json       
        sed -i "s/SHASUMrpi/$SUM/ig" os_list_imagingutility_v3_rpi.json       
        sed -i "s/DOWNLOADSIZErpi/$DOWNLOADSIZE/ig" os_list_imagingutility_v3_rpi.json        
        sed -i "s/RELEASEDATErpi/$RELEASEDATE/ig" os_list_imagingutility_v3_rpi.json    



